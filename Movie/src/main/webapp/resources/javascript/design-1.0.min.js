
/************************************************************************************************* 
 *  @Author : 이인수 (is@madive.co.kr)
 *  @Description : web 이벤트 관리
 *  @Version  1.0.8
 ************************************************************************************************/

var adPicPos = 243;
var quickPos = 0;

$(function () {
	 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 푸터 패밀리 사이트
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    $('.footer_box > a').on('click', function () {
        $(this).next().slideToggle(300);
    });
    $('.footer_box').on('mouseleave', function () {
        $(this).find('> ul').slideUp(300);
    });
	alert("111111111111");
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 링크 해시 리셋
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    $.fn.linkHashChange = function () {
    	
        $('a').each(function () {
            if ($(this).attr('href') == '#') $(this).attr('href', 'javascript:void(0);');
        });
    };
    $.fn.linkHashChange();

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 푸터 공지사항 슬라이드
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    $.fn.noticeSlideUp = function (option) {
    	alert("2222");
        var S = $.extend({
            methodName: '', target: '', slide: '.event_list', item: 'li', prev: '.btn_prev', next: '.btn_next', play: '.btn_play', stop: '.btn_stop', speed: 500
           , auto: true, delay: 3000, cinemaID: 0
        }, option);

        this.target = $(S.target);
        this.slide = this.target.find(S.slide);
        this.item = S.item;
        this.move = this.slide.height();
        this.curNo = 0;

        this.way = '-='
        this.prev = this.target.find(S.prev);
        this.next = this.target.find(S.next);
        this.play = this.target.find(S.play);
        this.stop = this.target.find(S.stop);
        this.speed = S.speed;
        this.delay = S.delay;
        this.auto = S.auto;
        this.timer;
        this.jsonData;
        this.methodName = S.methodName;
        this.cinemaID = S.cinemaID;

        this.init();
    };
    $.fn.noticeSlideUp();
    $.fn.noticeSlideUp.prototype = {
        init: function () {
        	alert("3");
            var T = this;

            var obj = {};
            var data = null;
            if (T.methodName == 'GetFooterNoticeList')   // 공지사항
            {
                //var obj = { MethodName: "GetMyMovie", channelType: "HO", osType: BrowserAgent(), osVersion: navigator.userAgent, memberOnNo: memberOnNo, filter: filter };
                obj = { MethodName: T.methodName, channelType: "HO", osType: BrowserAgent(), osVersion: navigator.userAgent, multiLanguageID: Language, cinemaAreaCode: 0, cinemaID: T.cinemaID };
                data = JsonReturnDataSync(CinemaServiceDomain + "/LCWS/Customer-Service-Center/CustomerServiceCenterData.aspx", obj);
                if (data.responseJSON.IsOK == "true")
                    T.jsonData = data.responseJSON.Notices.Items;
                else
                    T.jsonData = {};
            }
            else {  // 분실물
                obj = { MethodName: T.methodName, channelType: "HO", osType: BrowserAgent(), osVersion: navigator.userAgent, multiLanguageID: Language, cinemaID: T.cinemaID };
                data = JsonReturnDataSync(CinemaServiceDomain + "/LCWS/Customer-Service-Center/CustomerServiceCenterData.aspx", obj);
                T.jsonData = data.responseJSON.lostArticleItem.Items;
            }

            T.total = T.jsonData.length - 1;

            T.event();
        },

        event: function () {
            var T = this;

            T.slide.html("");

            $(T.jsonData).each(function () {
                var title;
                var code;
                if (T.methodName == 'GetFooterNoticeList') {
                    title = $(this)[0].Title;
                    code = $(this)[0].NoticeID;
                    html = '<li><a href="' + CinemaServerDomain + '/LCHS/Contents/Customer-Service-Center/Notice/notice-detail.aspx?noticeID=' + code + '">' + title + '</a></li>';
                } else {
                    title = $(this)[0].Title;
                    code = $(this)[0].LostArticleID;
                    html = '<li><a href="javascript:customerCenterMenu(4, "2")">' + title + '</a></li>';
                };

                T.slide.append(html);
            });

            T.slide.find(T.item).each(function (n) {
                $(this).css('top', n * T.move);
            });

            T.prev.on('click', function () {
            	
                if (T.slide.find(T.item).is(':animated')) return false;
                if (T.curNo > 0) {
                    T.curNo--;
                } else {
                    T.curNo = T.total;
                };
                T.way = '+=';
                T.animation('prev');
            });
            T.next.on('click', function () {
            	alert("3333333333");
                if (T.slide.find(T.item).is(':animated')) return false;
                if (T.curNo < T.total) {
                    T.curNo++;
                } else {
                    T.curNo = 0;
                };
                T.way = '-=';
                T.animation('next');
            });

            if (T.auto) {
                T.play.on('click', function () {
                    T.settimer(true);
                });
                T.stop.on('click', function () {
                    T.settimer(false);
                });

                T.settimer(true);
            };
        },

        animation: function (btn) {
            var R = this;

            if (btn == 'prev') {
                R.slide.find(R.item).eq(R.curNo).css({ 'top': -(R.move) });
            } else {
                R.slide.find(R.item).eq(R.curNo).css({ 'top': R.move });
            };

            R.slide.find(R.item).animate({ 'top': R.way + R.move }, R.speed);
        },

        settimer: function (bull) {
            Z = this;
            if (bull) {
                Z.timer = setInterval(function () {
                    Z.next.trigger('click');
                }, Z.delay);
            } else {
                clearInterval(Z.timer);
            };
        },
    };
    this.init();
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 게시판 페이징
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //$.fn.pagingGeneration({ target:타겟 클래스, type:타입코드, total:아이템갯수, view:화면에 보여지는 갯수, searchTarget:검색인풋 클래스, focus:포커스 이동 아이디, page:초기 셋팅 페이지 });
    $.fn.pagingGeneration = function (option) {
        var S = $.extend({ target: '.paging', type: '1', total: 20, view: 12, searchTarget: '', focus: '', page: 1 }, option);

        this.target = $(S.target);
        this.page = S.page;
        this.total = S.total;
        this.view = S.view;
        this.type = S.type;
        this.paging = Math.ceil(this.total / this.view);
        this.group = 1;
        this.groupSet = Math.ceil(this.paging / 10);
        this.pagetWidth = 277;
        this.btns = '';
        this.search = '';
        this.searchTarget = $(S.searchTarget);
        this.focus = $(S.focus);
        this.focusPos;
        if (this.focus != '') this.focusPos = this.focus.offset();

        this.init();
    };

    $.fn.pagingGeneration.prototype = {
        init: function () {
            var T = this;

            T.target.empty();

            T.target.append('<a href="javascript:void(0);" class="prev"><img src="/LCHS/Image/Btn/_02.gif" alt="10페이지 이전으로 이동"></a>');
            T.target.append('<span class="pagingNum"></span>');
            if (this.paging > 10) {
                T.target.find('span').css({ 'position': 'relative', 'overflow': 'hidden', 'height': 23, 'width': T.pagetWidth });
            } else {
                T.pagetWidth = (T.paging * 28) - 3
                T.target.find('span').css({ 'position': 'relative', 'overflow': 'hidden', 'height': 23, 'width': T.pagetWidth });
            };

            for (i = 1; i <= T.paging; i++) {
                T.target.find('span').append('<a href="javascript:void(0);">' + i + '</a>').find('a').eq(i - 1).css({ 'position': 'absolute', 'left': ((i - 1) * 28) - 3 });
            };

            T.target.append('<a href="javascript:void(0);" class="next"><img src="/LCHS/Image/Btn/btn_next_02.gif" alt="10페이지 다음으로 이동"></a>');

            if (T.groupSet > 1) {
                T.target.prepend('<a href="javascript:void(0);" class="first"><img src="/LCHS/Image/Btn/btn_first_02.gif" alt="처음으로 이동"></a>');
                T.target.append('<a href="javascript:void(0);" class="last"><img src="/LCHS/Image/Btn/btn_last_02.gif" alt="마지막으로 이동"></a>');
            };

            T.btns = T.target.find('span');

            T.btns.find('a').eq(T.page - 1).addClass('on');

            if (T.page > 10) {
                T.btns.find('a').css({ 'left': '-=' + (Math.floor(T.page / 10) * T.pagetWidth) });
                T.group = Math.ceil(T.page / 10);
            };
            T.event();
        },

        event: function () {
            var R = this;

            R.btns.find('a').on('click', function () {
                (!R.searchTarget) ? R.search = '' : R.search = R.searchTarget.val();
                R.page = $(this).text();
                $(this).addClass('on').siblings('a').removeClass('on');
                //if (R.focusPos != 0) $(window).scrollTop(R.focusPos.top);
                $.fn.gotoPage(R.type, R.search, R.page, R.view);
            });

            this.target.find('> a').on('click', function () {
                (!R.searchTarget) ? R.search = '' : R.search = R.searchTarget.val();

                switch ($(this).attr('class')) {
                    case 'first':
                        R.slideStart();
                        R.update();
                        break;
                    case 'last':
                        R.slideEnd();
                        break;
                    case 'prev':
                        if (R.group > 1) {
                            R.group--;
                            ((parseInt(R.page) - 10) < 1) ? R.page = 1 : R.page = parseInt(R.page) - 10;
                            R.btns.find('a').eq(R.page - 1).addClass('on').siblings('a').removeClass('on');
                            $.fn.gotoPage(R.type, R.search, R.page, R.view);
                            R.slide('+=');
                            R.update();
                        } else {
                            R.slideStart();
                        };
                        break;
                    case 'next':
                        if (R.group < R.groupSet) {
                            R.group++;
                            ((parseInt(R.page) + 10) > R.paging) ? R.page = R.paging : R.page = parseInt(R.page) + 10;
                            R.btns.find('a').eq(R.page - 1).addClass('on').siblings('a').removeClass('on');
                            $.fn.gotoPage(R.type, R.search, R.page, R.view);
                            R.slide('-=');
                            R.update();
                            if (R.group == R.groupSet) {
                                R.btns.css({ 'width': (((R.paging - ((R.group - 1) * 10))) * 28) - 3 });
                            };
                        } else {
                            R.slideEnd();
                        };
                        break;
                };
            });
        },

        slide: function (way) {
            var R = this;

            R.btns = R.target.find('span');

            R.btns.find('a').css({ 'left': way + R.pagetWidth });
        },

        slideStart: function () {
            var R = this;

            R.page = 1;
            R.btns.find('a').eq(R.page - 1).addClass('on').siblings('a').removeClass('on');
            R.btns.find('a').css({ 'left': '+=' + ((R.group - 1) * R.pagetWidth) });
            R.group = 1;
            $.fn.gotoPage(R.type, R.search, 1, R.view);
        },

        slideEnd: function () {
            var R = this;

            R.page = R.paging;
            R.btns.find('a').eq(R.page - 1).addClass('on').siblings('a').removeClass('on');
            R.btns.find('a').css({ 'left': '-=' + ((R.groupSet - R.group) * R.pagetWidth) });
            R.group = R.groupSet;
            R.btns.css({ 'width': (((R.page - ((R.group - 1) * 10))) * 28) - 3 });
            $.fn.gotoPage(R.type, R.search, R.paging, R.view);
        },

        update: function () {
            this.btns.css({ 'width': this.pagetWidth });
        },
    };

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    // 평점 체크
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    $.fn.starRating = function (insFunction) {
        var starPos = $('.score_star .starscore').offset();
        var starWid = $('.score_star .starscore').width();
        var insPos = 0;
        var insStar = 0;
        var fixVar = 5;

        $('.score_star .starscore').on('mousemove', function (e) {
            starPos = $('.score_star .starscore').offset();
            insPos = e.pageX - starPos.left;
            insStar = Math.ceil(insPos / (starWid / 10));
            $(this).find('.starinner').css('width', Math.ceil(insPos));
            $('.score_star .star_sum span').text(insStar);
        });

        $('.score_star .starscore').mouseleave(function () {
            $(this).find('.starinner').css('width', Math.ceil(fixVar * 8));
            $('.score_star .star_sum span').text(fixVar);
        });

        $('.score_star .starscore').click(function () {
            fixVar = insStar;
            insFunction(fixVar);
        });
    };

    // 푸터 일부 링크 새창으로 실행
    var footLink = setTimeout(function () {
        $('.footer_link').find('li').each(function () {
            var footLinkTxt = $(this).find('a').text();
            //console.log(footLinkTxt);
            // 채용안내, 광고/임대문의, 기업정보
            if (footLinkTxt.indexOf("채용안내") > -1 || footLinkTxt.indexOf("광고") > -1 || footLinkTxt.indexOf("기업정보") > -1) {
                $(this).find('a').attr('target', '_blank');
            } else {
                //$(this).find('a').attr('target', '_self');
            }
        });
        // 전체 새창의 경우 주석 풀것
        //$('.footer_link a').attr('target', '_blank');
    }, 1000)
});

var ticketTabPos; // 극장화면 탭 고정 변수

$(window).scroll(function () {
    var scTop = $(window).scrollTop();
    if ($('.c_fixed').hasClass('c_fixed')) {
        var tabTop = $('.c_fixed').offset();

        if (tabTop.top < scTop) {
            $('.bg_fixed').css({ 'position': 'fixed', 'top': 0 }).addClass('on');
        } else {
            $('.bg_fixed').css({ 'position': 'relative' }).removeClass('on');
        };
    };
});

//$(window).load(function () {
//    $('.bannerImg').each(function () {
//        $(this).find('li').each(function () {
//            if (!$(this).find('a').hasClass('btnc_play')) {
//                $(this).css('background', 'url("' + $(this).find('img').attr('src') + '") no-repeat 50% 0').find('img').css('visibility', 'hidden');
//            };
//        });
//    });
//})